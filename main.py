# pylint: disable=consider-using-f-string,no-value-for-parameter

from json import dumps
from traceback import format_exc
from pymorphy2 import MorphAnalyzer

from functions import check_word_existence, get_new_word
from player import Player

if __name__ == "__main__":
    morph = MorphAnalyzer(lang='ru')

    print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω üöÄ')
    player = Player()
    player.cword = get_new_word()
    while True:
        #for event in longpoll.check():
        try:
                
                #if event.t.value == 'message_new':
                    #uid: int = event.message['peer_id']
            text = input("–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ: ").lower()
                    #print('üì© {}: –ø–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ¬´{}¬ª'.format(uid, text))

            if not text:
                continue

            
            # ==== –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–¨ ====
            '''
                    if uid == ADMIN:
                        if 'data' in text:
                            msg(ADMIN, str('\n'.join([
                                dumps(i, ensure_ascii=False) for i in list(Player.select().dicts().execute())
                            ])))
                            continue

                        if 'clear' in text:
                            action, act_id = text.split()[1], text.split()[2]
                            if not act_id.isdigit() or action not in ['all', 'stats']:
                                msg(ADMIN, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥.')
                                continue

                            act_player = Player.get(Player.id == int(act_id))

                            if action == 'all':
                                res = act_player.delete_instance()
                                msg(ADMIN, '–£–¥–∞–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ {} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö.'.format(res))
                            elif action == 'stats':
                                act_player.stats = dumps({i: 0 for i in (1, 2, 3, 4, 5, 6, 'wins', 'total')})
                                act_player.save()
                                msg(ADMIN, '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @id{} –æ—á–∏—â–µ–Ω–∞.'.format(act_id))
                            continue

                        if '–ø–æ–º–æ—â—å' in text or 'help' in text:
                            msg(uid, '‚Äì data ‚Äî –≤—ã–≤–æ–¥–∏—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–¥\n'
                                  '‚Äì clear {stats|all} <id> ‚Äî –æ—á–∏—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ id\n'
                                  '‚†Ästats ‚Äî —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n‚†Äall ‚Äî –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
                            continue
                    # ======================
                    

                    if text.split()[-1].startswith('—Å—Ç–∞—Ç') or text.split()[-1].startswith('stat'):
                        stats = player.get_stats()
                        msg(uid, ('–î–∞–≤–∞–π –ø–æ—Å–º–æ—Ç—Ä–∏–º, –∫–∞–∫ —Ç—ã –∏–≥—Ä–∞–µ—à—å üéÆ\n'
                                  + '1: {}\n2: {}\n3: {}\n4: {}\n5: {}\n6: {}\n'.format(
                                      *[stats[str(i)] for i in range(1, 7)]
                                  )
                                  + '–í—Å–µ–≥–æ –≤—ã–∏–≥—Ä–∞–Ω–æ: {} –∏–∑ {} —Å—ã–≥—Ä–∞–Ω–Ω{}.'.format(
                                      stats['wins'], stats['total'],
                                      '–æ–π' if stats['total'] % 10 == 1 and stats['total'] % 100 != 11 else '—ã—Ö'
                                  )))
                        continue
                    '''

            if text.split()[-1] in ['–ø–æ–º–æ—â—å', 'help']:
                print('–†–∞–∑–±–µ—Ä—ë–º—Å—è, —á—Ç–æ –∫ —á–µ–º—É:\n' +
                                 '‚†Ä‚Äì –ù–∞–ø–∏—à–∏ –ª—é–±–æ–µ —Å–ª–æ–≤–æ –∏–∑ –ø—è—Ç–∏ –±—É–∫–≤ –∏ –≤–µ—Å–µ–ª—å–µ –Ω–∞—á–Ω—ë—Ç—Å—è!\n' +
                                 #'‚†Ä‚Äì –ù–∞–ø–∏—à–∏ ¬´—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞¬ª –∏–ª–∏ ¬´—Å—Ç–∞—Ç–∞¬ª, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–≤–æ–∏—Ö –∏–≥—Ä.\n'
                                 '‚†Ä‚Äì –ù–∞–ø–∏—à–∏ ¬´–ø–æ–º–æ—â—å¬ª –∏–ª–∏ ¬´help¬ª, —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å —ç—Ç—É –ø—Ä–µ–∫—Ä–∞—Å–Ω—É—é —Å–ø—Ä–∞–≤–∫—É.\n\n' +
                                 '–î–∞ –Ω–∞—á–Ω—ë—Ç—Å—è –≤–µ—Å–µ–ª—å–µ! üèÉüèª‚Äç‚ôÇÔ∏è'
                            )
                continue

            if not player.story:
                player.story = ''

            player.uword = text.split()[-1]

            if not check_word_existence(player.uword):
                print('{}–ù–µ—Ç –≤ —Å–ª–æ–≤–∞—Ä–µ\n{}'.format(player.story,
                                                              player.used_letters))
                continue

            mask, lmask = '', ['*', '*', '*', '*', '*', '‚†Ä']
            for i in range(5):
                if player.uword[i] == player.cword[i]:
                    mask += 'üü©'
                    lmask = list(lmask)
                    if player.uword[i].upper() in lmask[lmask.index('‚†Ä'):]:
                        lmask.remove(player.uword[i].upper())
                    lmask[i] = player.uword[i].upper()
                    lmask = ''.join(lmask)  # type: ignore
                    lmask += player.uword[i].upper()
                elif (player.uword[i] in player.cword
                              and player.uword[:i].count(player.uword[i])
                              != player.cword.count(player.uword[i])
                              and player.uword[i]
                              != player.cword[player.uword.rfind(player.uword[i])]):
                    mask += 'üü®'
                    lmask += player.uword[i].upper()
                else:
                    mask += '‚¨ú'
                    lmask += player.uword[i]

                if player.uword[i].upper() in player.used_letters:
                    a = list(player.used_letters)
                    a.remove(player.uword[i].upper())
                    player.used_letters = ''.join(a)

            print('{}{}/6: {}‚†Ä ‚†Ä{}\n{}'.format(player.story, player.guesses,
                                                          mask, ''.join(lmask), player.used_letters))

            player.story += '{}/6: {}‚†Ä ‚†Ä{}\n'.format(player.guesses, mask, ''.join(lmask))

            if player.uword == player.cword:
                num_to_word = {1: '–ø–µ—Ä–≤–æ–π', 2: '–≤—Ç–æ—Ä–æ–π', 3: '—Ç—Ä–µ—Ç—å–µ–π',
                                       4: '—á–µ—Ç–≤—ë—Ä—Ç–æ–π', 5: '–ø—è—Ç–æ–π', 6: '–ø–æ—Å–ª–µ–¥–Ω–µ–π'}
                print('''–≠—Ç–æ –ø–æ–±–µ–¥–∞! –¢—ã —É–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ {} —Å {} –ø–æ–ø—ã—Ç–∫–∏. –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! ‚úäüèª
–ë–æ–ª—å—à–µ –æ–± —ç—Ç–æ–º —Å–ª–æ–≤–µ: https://ru.wiktionary.org/wiki/{}.'''.format(
                            player.cword.upper(), num_to_word[player.guesses], player.cword
                        ))
                break
                        #player.win(player.guesses)
            else:
                player.increase_guesses()

            if player.guesses == 7:
                print('''–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª üòî –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: {0}.
–ë–æ–ª—å—à–µ –æ–± —ç—Ç–æ–º —Å–ª–æ–≤–µ: https://ru.wiktionary.org/wiki/{0}.'''.format(player.cword))
                break
                #player.lose()

                #player.save()
        except Exception:
            print('–ü–æ–π–º–∞–ª–∏ –æ—à–∏–±–∫—É. –°–º–æ—Ç—Ä–∏ —Ç—Ä–µ–π—Å–±–µ–∫:\n\n{}'.format('\n'.join(format_exc().split('\n')[1:])))

